// Possible Password values
const upperCaseValues = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');
const lowerCaseValues = 'abcdefghijklmnopqrstuvwxyz'.split('');
const numberValues = '0123456789'.split('');
const symbolValues = '`~!@#$%^&*()_+{}[]<>?'.split('');
const permittedCharacters = [];
let generateBtn = document.querySelector("#generate");

// Store whatever choices the user makes 
let userChoice = [];

/**
 * @param {Array} userChoice The array of strings necessary to combine into the user's password
 * @returns {String} selectedCharacter - a randomly selected character within the userChoice array
 * @description A function which selects random elements of the user's choice for as many times as the lenght of their password
*/
function random_selection(userChoice) {
  let selectedCharacter = userChoice[Math.floor(Math.random() * userChoice.length)];
  return selectedCharacter;
}

/**
 * @returns {String} permittedCharactersString - a string containing the characters selected by the user
 * @description A function which prompts the user to verify what characters they'd like to include in their password
 */
// Determine what values userChoice will contain
function confirmParameters() {
  let confirmLength = parseInt(prompt("How many characters would you like in your password? (It must be between 8-128 characters long)"));

  let confirmUpperCase = confirm("Would you like to include uppercase letters in your password?");
  let confirmLowerCase = confirm("Would you like to include lowercase letters in your password?");
  let confirmNumbers = confirm("Would you like to include numbers in your password?");
  let confirmSymbols = confirm("Would you like to include special symbols in your password?");

  // If the user selects none of our options, then restart
  if (confirmLowerCase === false && confirmUpperCase == false && confirmNumbers === false && confirmSymbols === false) {
    alert("You haven't selected any characters, please refresh the page and try again.")
  }

  // THEN I choose a length of at least 8 characters and no more than 128 characters
  if (confirmLength <= 7 || confirmLength >= 129) {
    confirmLength = alert("Password must be within 8 to 128 characters, please refresh the page and try again");
  }

  // Adding all permited characters to the userchoice array
  if (confirmUpperCase === true) {
    userChoice = userChoice.concat(upperCaseValues);
  }

  if (confirmLowerCase === true) {
    userChoice = userChoice.concat(lowerCaseValues);
  }

  if (confirmNumbers === true) {
    userChoice = userChoice.concat(numberValues);
  }

  if (confirmSymbols === true) {
    userChoice = userChoice.concat(symbolValues);
  }

  // Once userChoice is full of selected elements, run random_selection to select a random element.
  for (let i = 0; i < confirmLength; i++) {
      // Run random_selection for as many times as confirmLength, and store the copied the elements in permittedCharacters. 
    permittedCharacters.push(random_selection(userChoice));
  }

  // Convert the array the confirmParameters is returning as a string
  let permittedCharactersString = permittedCharacters.join('');
  return permittedCharactersString;
}

/**
 * @param {String} password The password string containing the user's selected parameters
 * @param textArea - the textArea element with the id of password in the DOM where the password is to be displayed 
 * @description A function which writes the password generated by the confirmParameters() method and changes the value of the password textArea element
 */
// Write password to the #password input
function writePassword(password, passwordTextArea) {
  password = confirmParameters();
  passwordTextArea = document.querySelector("#password");
  passwordTextArea.value = password;
}

//------------ MAIN ------------//

// Add event listener to generate button
generateBtn.addEventListener("click", writePassword);